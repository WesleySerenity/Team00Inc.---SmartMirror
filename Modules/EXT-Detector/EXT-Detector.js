
Module.register("EXT-Detector",{requiresVersion:"2.25.0",defaults:{debug:!1,useIcon:!0,porcupineAccessKey:null,porcupineCustomModel:null,snowboyMicConfig:{audioGain:2,applyFrontend:!0},detectors:[{detector:"Snowboy",Model:"jarvis",Sensitivity:null},{detector:"Porcupine",Model:"ok google",Sensitivity:null},{detector:"Porcupine",Model:"hey google",Sensitivity:null}]},start(){this.ready=!1,this.config.mic={recorder:"auto",device:"default"},this.config.snowboyMicConfig=configMerge({},this.config.mic,this.config.snowboyMicConfig);const i={file:(...e)=>this.file(...e),sendSocketNotification:(...e)=>this.sendSocketNotification(...e),sendNotification:(...e)=>this.sendNotification(...e)};this.visual=new DetectorVisual(this.config.useIcon,i)},notificationReceived(i,e,t){switch(i){case"EXT_DETECTOR-START":this.ready&&this.sendSocketNotification("START");break;case"EXT_DETECTOR-STOP":this.ready&&this.sendSocketNotification("STOP");break;case"GA_READY":t.name==="MMM-GoogleAssistant"&&this.sendSocketNotification("INIT",this.config);break}},socketNotificationReceived(i,e){switch(i){case"INITIALIZED":this.sendNotification("EXT_HELLO",this.name),this.ready=!0;break;case"NOT_INITIALIZED":this.sendNotification("EXT_ALERT",{message:"Error: No detectors found, please review your configuration",type:"error"});break;case"WARNING":case"ERROR":this.sendNotification("EXT_ALERT",{message:`Error when loading ${e.library} library. Try: 'npm run rebuild' in EXT-Detector directory`,type:"error"});break;case"ACCESSKEY":this.sendNotification("EXT_ALERT",{message:"Error: No porcupineAccessKey provided in config",type:"error"});break;case"PORCUPINENOTINIT":this.sendNotification("EXT_ALERT",{message:"Error: Can't start Porcupine detector",type:"error"});break;case"LISTENING":this.visual.DetectorRefreshLogo(!1);break;case"DETECTED":this.visual.DetectorActivateWord();break;case"DISABLED":this.visual.DetectorDisabled();break}},getStyles(){return[this.file("EXT-Detector.css")]},getScripts(){return["/modules/EXT-Detector/components/visual.js"]},getDom(){return this.visual.DetectorDom()}});

